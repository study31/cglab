#include<GL/glut.h>
void display(void)
{
	glClear ( GL_COLOR_BUFFER_BIT );
	glColor3f (0.0, 1.0, 0.0);
	glBegin(GL_LINES);
		glVertex3f (0.0, 0.5,0.0);
		glVertex3f (0.5, 0.0,0.0);
	glEnd();
	glColor3f (1.0, 1.0, 0.0);
	glBegin(GL_LINES);
		glVertex3f (0.0, 0.5,0.0);
		glVertex3f (-0.5, 0.0,0.0);
	glEnd();
	glColor3f (1.0, 0.0, 1.0);
	glBegin(GL_LINES);
		glVertex3f (-0.5, 0.0,0.0);
		glVertex3f (0.5, 0.0,0.0);
	glEnd();
	typedef GLfloat point2[3];
	point2 vertices[3] = {{0.0,0.5,0.0},{-0.5, 0.0,0.0},{0.5,0.0,0.0}};
	int i,j, k;
	point2 p = {0.0, 0.25,0.0};
	for(k = 0; k <= 4000;k++)
	{
		j = rand()%3;
		if(j==0)
			glColor3f (0.0, 1.0, 0.0);
		else if(j==1)
			glColor3f (1.0, 1.0, 0.0);
		else
			glColor3f (1.0, 0.0, 1.0);
		p[0] = (p[0] + vertices[j][0])/2.0;
		p[1] = (p[1] + vertices[j][1])/2.0;
		p[2]=0.0;
		glBegin(GL_POINTS);
		glVertex3fv(p);
		glEnd();
	}
	glFlush();
}
int main(int argc, char **argv)
{
    glutInit(&argc,argv);	
    glutInitDisplayMode (GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(500, 500);
    glutInitWindowPosition(0, 0);
    glutCreateWindow("Triangle");
    glutDisplayFunc(display);
	glutMainLoop();
}
